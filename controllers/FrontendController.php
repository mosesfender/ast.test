<?php
/*
 * Copyright (c) Sergey Siunov 2024
 * @email sergey@siunov.ru
 */

namespace app\controllers;

use app\components\ModelException;
use app\models\EventSearch;
use app\models\LoginForm;
use app\models\User;
use yii\filters\AccessControl;
use yii\web\Controller;
use yii\web\Response;

class FrontendController extends Controller
{
    public function behaviors()
    {
        return [
            /* Настройки доступа ко всем действиям всех контроллеров. Их тут немного, поэтому можно и так. */
            /* Разрешения|роли в файлах @app/rbac под управлением components/RbacPhpManager.php */
            'access' => [
                'class' => AccessControl::class,
                'rules' => [
                    [
                        'allow'       => true,
                        'controllers' => ['frontend'],
                        'actions'     => ['index', 'login', 'error', 'logout'],
                        'roles'       => ['?', '@']
                    ]
                ]
            ]
        ];
    }
    
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
        ];
    }
    
    public function actionIndex(): string
    {
        $searchModel = new EventSearch();
        $dataProvider = $searchModel->search($this->request->queryParams);
    
        return $this->render('index', [
            'searchModel'  => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }
    
    public function actionLogin(): Response|string
    {
        if (!\yii::$app->user->isGuest) {
            return $this->goHome();
        }
        
        $model = new LoginForm();
        try {
            if ($model->load(\yii::$app->request->post()) && $model->login()) {
                if(\yii::$app->user->can('eo')){
                    return $this->redirect('/conductor');
                }
                return $this->goBack();
            }
        } catch (ModelException $ex) {
            \yii::$app->getSession()->setFlash('error', $ex->toString());
        }
        
        $model->password = '';
        return $this->render('login', [
            'model' => $model,
        ]);
    }
    
    public function actionLogout(): Response
    {
        \yii::$app->user->logout();
        
        return $this->goHome();
    }
    
    public function actionPass()
    {
        $user = User::findOne(1);
        $user->password = \yii::$app->security->generatePasswordHash('123456');
        $user->save(false);
    }
    
    public function beforeAction($action)
    {
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }
    
    
}
